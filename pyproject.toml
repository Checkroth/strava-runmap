[project]
name = "pelican-strava_runmap"
version = "0.0.0"
description = "Hooks in to Strava API to create a page of all of your historical runs in strava."
authors = [{name = "Charles Heckroth", email = "checkroth@gmail.com"}]
license = {text = "AGPL-3.0"}
readme = "README.md"
keywords = ["pelican", "plugin", "strava"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "pelican>=4.5",
    "requests>=2.32",
    "polyline>=2.0",
]


[project.urls]
Homepage = "https://github.com/pelican-plugins/strava_runmap"
"Issue Tracker" = "https://github.com/pelican-plugins/strava_runmap/issues"
Funding = "https://donate.getpelican.com/"

[project.optional-dependencies]
markdown = ["markdown>=3.4"]

[tool.pdm.dev-dependencies]
lint = [
    "black>=23.7.0",
    "invoke>=2.2.0",
    "ruff>=0.0.280",
]
test = [
    "markdown>=3.4",
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-sugar>=0.9.7",
]

[tool.autopub]
project-name = "strava_runmap"
git-username = "botpub"
git-email = "52496925+botpub@users.noreply.github.com"
append-github-contributor = true

[tool.ruff]
lint.select = [
  "B",   # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PGH", # pygrep-hooks
  "PL",  # pylint
  "RET", # flake8-return
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT", # flake8-2020
]

lint.ignore = [
  "D100",    # missing docstring in public module
  "D101",    # missing docstring in public class
  "D102",    # missing docstring in public method
  "D103",    # missing docstring in public function
  "D104",    # missing docstring in public package
  "D203",    # blank line before class docstring
  "D213",    # multi-line docstring summary should start at the second line
]

target-version = "py38"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["pelican"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ['pelican']
